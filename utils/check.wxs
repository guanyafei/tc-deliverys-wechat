// 校验
//手机号码脱敏
var toHide = function (array) {
  if (!array) return;
  var mphone = array.substring(0, 3) + '****' + array.substring(7);
  return mphone;
}
// 设置运单图片
var setStatusImg = function (status, index) {
  var route = index == '0' ? '../../assets/images/icon' + status + '_1@2x.png' : '../../assets/images/icon' + status + '_0@2x.png';
  return route
}
// 名字脱敏
var toHideName = function (str) {
  if (str == undefined || str == "") {
    return "";
  } else {
    var arr = [];
    for (var i = 0; i < str.length - 1; i++) {
      arr.push("*");

    }
    return str.substring(0, 1) + arr.join("");
  }
}
// 抬头类型
var setInvoiceHeader = function (type) {
  var obj = {
    '1': '企业',
    '2': '个人/非企业',
  }
  return obj[type + '']
}
// 企业类型
var setInvoiceType = function (header) {
  var obj = {
    '1': '电子普票',
    '2': '纸质专票',
  }
  return obj[header + '']
}
// 开票记录发票类型
var setRecordInvoiceType = function (header) {
  var obj = {
    '1': '增值税普通发票',
    '2': '增值税专用发票',
  }
  return obj[header + '']
}
// 预估时间弹窗设置左边日期 day 0:今天 1:明天 2:后天
var setFormateDate = function (day) {
  var date = getDate().getTime() + 1000 * 60 * 60 * 24 * day;
  date = getDate(date);
  var Y = date.getFullYear() + '-';
  var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';
  var D = date.getDate()<10?'0' + date.getDate() : date.getDate();
  return Y + M + D;
}
// 检测错误列表是否存在key值
var checkIsHasKey = function (list, key) {
  return list.indexOf(key) > -1;
}
// 运单状态
var setSignStatus = function (status) {
  var obj = {
    '1': '已下单',
    '2': '已取消',
    '3': '待揽件',
    '4': '揽件终止',
    '5': '已揽件',
    '6': '运输中',
    '7': '派送中',
    '8': '已拒收',
    '9': '已签收',
  }
  return obj[status + '']
}
// 路由状态

// 签收状态
var setRouteStatus = function (status) {
  var obj = {
    '1': '已下单',
    '2': '已取消',
    '3': '待揽件',
    '4': '揽件中',
    '5': '揽件终止',
    '6': '已揽件',
    '7': '运输中',
    '8': '派送中',
    '9': '已拒收',
    '10': '已签收',
    '11': '回单已上传',
    '12': '回单已拒收',
  }
  return obj[status + '']
}
// 开票状态
var setInvoiceStatus = function (status) {
  var obj = {
    '1': '未开票',
    '2': '已开票',
    '3': '开票中',
    '4': '开票失败',
    '5': '作废',
  }
  return obj[status + '']
}
var setArrivalType = function (arrivalType) {
  var imgList = {
    'TDD': '../../assets/images/jrd@2x.png',
    'NMD': '../../assets/images/ccd@2x.png',
    'NDD': '../../assets/images/crd@2x.png',
  };
  return imgList[arrivalType + ''];
}
var setClass = function (status) {
  var classObj = {
    '1': 'dls',
    '3': 'dls',
    '9': 'yqs',
    '5': 'yls',
    '2': 'ylj'
  };
  return classObj[status + ''];
}
// 判断字符串是否为空
var checkIsNull = function(val){
  return typeof val == "undefined" || val == null || val == ""
}
// 格式化时分
var formatHM = function (date) {
  if(checkIsNull(date)) return '';
  return date.slice(11,16);
}
var formatMd = function (date) {
  if(checkIsNull(date)) return '';
  return date.slice(5,10);
}
var formatNumber = function(n){
  n = n.toString();
  return n[1] ? n : '0'+n;
}
// 结算方式
var setSettlementType = function (status) {
  var obj = {
    '1': '寄付月结',
    '2': '寄付现结',
    '3': '到付现结'
  }
  return obj[status + '']
}
// 产品类型
var setServiceProductName = function (status) {
  var obj = {
    'TDD': '即日达',
    'NMD': '次晨达',
    'NDD': '次日达'
  }
  return obj[status + '']
}
// 支付类型
var setPaymentState = function (status) {
  var obj = {
    '1': '未支付',
    '2': '已支付',
    '3': '支付失败',
    '4': '支付中'
  }
  return obj[status + '']
}
// 结算方式
var setServiceType = function (status) {
  var obj = {
    'IP': '保价费用',
    'PK': '包装费用',
    'SR': '签单返还'
  }
  return obj[status + '']
}
module.exports = {
  toHide: toHide,
  setStatusImg: setStatusImg,
  toHideName: toHideName,
  setInvoiceHeader: setInvoiceHeader,
  setInvoiceType: setInvoiceType,
  setFormateDate: setFormateDate,
  checkIsHasKey: checkIsHasKey,
  setSignStatus: setSignStatus,
  setRecordInvoiceType: setRecordInvoiceType,
  setInvoiceStatus: setInvoiceStatus,
  setArrivalType: setArrivalType,
  setClass: setClass,
  formatHM: formatHM,
  formatMd: formatMd,
  setSettlementType:setSettlementType,
  setServiceProductName:setServiceProductName,
  setPaymentState:setPaymentState,
  setServiceType:setServiceType,
  setRouteStatus:setRouteStatus,
}